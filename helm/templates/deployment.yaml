apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.appName }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
        azure.workload.identity/use: "true"
    spec:
      serviceAccountName: {{ .Values.namespace }}      
      volumes:
        - name: log-volume
          persistentVolumeClaim:
            claimName: {{ .Values.appName }}-logs
      containers:
        - name: {{ .Values.appName }}
          image: "{{ .Values.registry }}/{{ .Values.image }}:{{ .Values.image_tag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy | default "IfNotPresent" }}
          resources:
            requests:
              memory: {{ .Values.memory_requests | default "50Mi" }}
              cpu: {{ .Values.cpu_requests | default "20m" }}
            limits:
              memory: {{ .Values.memory_limits | default "70Mi" }}
              cpu: {{ .Values.cpu_limits | default "40m" }}
          ports:
            - containerPort: {{ .Values.port }}
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
            # Secret-based environment variables
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.appName }}-secret
                  key: POSTGRES_PASSWORD         
          volumeMounts:
            - name: log-volume
              mountPath: /var/log/app
          livenessProbe: 
            httpGet:
              path: {{ .Values.livenessProbe.path | default "/" }}
              port: {{ .Values.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds | default 30 }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds | default 30 }}
          readinessProbe: 
            httpGet:
              path: {{ .Values.readinessProbe.path | default "/" }}
              port: {{ .Values.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds | default 30 }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds | default 30 }}
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 10"]

        - name: fluentd-sidecar
          image: fluent/fluentd:latest
          volumeMounts:
            - name: log-volume
              mountPath: /var/log/app
          env:
            - name: FLUENTD_CONF
              value: fluent.conf
          resources:
            limits:
              cpu: 100m
              memory: 200Mi
            requests:
              cpu: 50m
              memory: 100Mi

