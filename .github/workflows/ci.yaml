name: CI Pipeline

on:
  pull_request:
    branches:
      - main
    types: [opened]
    paths:
      - "tests/*"
      - "helm/*"
      - "api/*"

jobs:
  quality-checks:
    name: Linting & Security (Non-blocking)
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install tools
        run: |
          pip install ruff bandit

      - name: Run ruff linter
        run: ruff check api/
        continue-on-error: true

      - name: Run Bandit security scan
        run: bandit -r api/
        continue-on-error: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image for scanning (no push)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: false
          load: true
          tags: rick-morty-api:local

      - name: Run Trivy image scan (non-blocking)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: rick-morty-api:local
          format: table
          exit-code: 0
          ignore-unfixed: true

  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run Pytest
        run: pytest tests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/rick-morty-api:pr-${{ github.event.pull_request.number }}

  cd:
    name: Deploy Application
    uses: ./.github/workflows/cd.yaml
    needs: build-and-push
    with:
      image_tag: ${{ github.event.pull_request.number }}
    secrets:
      postgres_pass: ${{ secrets.POSTGRES_PASSWORD }}